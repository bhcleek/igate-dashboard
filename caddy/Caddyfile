# global options
{
	email k7bcx@arrl.net

	on_demand_tls {
		# restrict TLS on demand certificates to those that are authorized.
		ask http://localhost/on_demand/ask
	}

	# TODO(bc): don't really need to do this, as /var/lib/caddy is caddy's home directory.
	storage file_system {
		root /var/lib/caddy
	}

	#acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
	acme_ca https://acme-v02.api.letsencrypt.org/directory
}

# reverse proxy frontail
igate.k7bcx.com {
	encode zstd gzip

	header X-Robots-Tag "noindex, nofollow"
	# TODO(bc): HSTS headers and related

	reverse_proxy {
		to http://127.0.0.1:9001
		header_down +X-Robots-Tag "noindex, nofollow"
	}
}

{$DASHBOARD_DOMAIN} {
	encode zstd gzip

	header X-Robots-Tag "noindex, nofollow"
	# TODO(bc): HSTS headers and related

	reverse_proxy {
		to http://127.0.0.1:3000
		header_down +X-Robots-Tag "noindex, nofollow"

		header_up -X-WEBAUTH-USER
		header_up -X-WEBAUTH-ROLE
	}
}

{$LOGS_DOMAIN} {
	encode zstd gzip

	header X-Robots-Tag "noindex, nofollow"
	# TODO(bc): HSTS headers and related

	@victoria {
		method POST
		path /insert/jsonline
		header Content-Type application/json
		header Content-Type application/x-ndjson
		header Authorization "Bearer {$LOGS_TOKEN}"
	}

	reverse_proxy @victoria {
		to http://127.0.0.1:9428
		header_down +X-Robots-Tag "noindex, nofollow"
	}
}

{$METRICS_DOMAIN} {
	encode zstd gzip

	header X-Robots-Tag "noindex, nofollow"
	# TODO(bc): HSTS headers and related

	@backend {
		method POST
		header Authorization "Token {$METRICS_TOKEN}"
	}

	reverse_proxy @backend {
		to http://127.0.0.1:8429
		header_down +X-Robots-Tag "noindex, nofollow"
	}
}

http://localhost {
	# the ask matcher is to support the on_demand.ask directive
	@ask {
		method GET
		path /on_demand/ask
		query domain=igate.k7bcx.com
		query domain={$DASHBOARD_DOMAIN}
		query domain={$LOGS_DOMAIN}
		query domain={$METRICS_DOMAIN}
	}

	respond @ask 200

	tls internal {
		on_demand
	}
}
